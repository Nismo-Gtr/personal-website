"use strict";var precacheConfig=[["/index.html","112f418f5cf6c06debcbca6577fd2bf8"],["/static/css/main.d5350675.css","1bce46ef8dd0e887a05adbc7fcd16a15"],["/static/js/main.ab6d60a4.js","f1981ad9e3f0741ed0bc27fed3ac37bb"],["/static/media/adventure.82bf5979.jpg","82bf59795b876f920bf00b6fdc4d897d"],["/static/media/bootstrap-plain-wordmark.76d7c6aa.svg","76d7c6aabe5de63af067918dc270986c"],["/static/media/code-icon.75f23058.svg","75f23058499972358807c09b5f71f962"],["/static/media/express-original-wordmark.f1a0b0e9.svg","f1a0b0e9c7eb8a3294e84f11441de5df"],["/static/media/format-align-center.694b4e71.svg","694b4e71d40d015191ba66a915865638"],["/static/media/github-original.4097a5be.svg","4097a5be85bf4c4e64ec52f389ea039d"],["/static/media/home-office.2413c776.jpg","2413c77684bb2fb8cba3ad6c9c547d81"],["/static/media/jquery-original-wordmark.8ec9bacf.svg","8ec9bacf8bc78b8ad161b5e9a2a16e87"],["/static/media/letter.a70c3af6.svg","a70c3af6d57d38b28a2c3bbf9e563d9e"],["/static/media/linkedin-original.bad4685f.svg","bad4685f20f2ef1a53f6f7d6486ad8af"],["/static/media/mongodb-original-wordmark.b1847af9.svg","b1847af9e7cf00cbe2d44e9fa173d281"],["/static/media/mysql-original-wordmark.c02ade79.svg","c02ade79e7034732a856b802471a5f31"],["/static/media/nodejs-original-wordmark.f13b681b.svg","f13b681bf07a1d23ee3fd1c591385ce9"],["/static/media/react-original-wordmark.fadd9c95.svg","fadd9c9566ccc46c6b0e73caca5860de"],["/static/media/sequelize-original-wordmark.de61840d.svg","de61840db589315bf5351360614911bf"],["/static/media/user.be571b90.svg","be571b90dcb1b6614fd75930a47dc1cf"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],r=new URL(a,self.location),n=createCacheKey(r,hashParamName,t,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(r){return setOfCachedUrls(r).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return r.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),r="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,r),e=urlsToCacheKeys.has(t));var n="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});